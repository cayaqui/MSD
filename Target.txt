Objetivo general
Importante: Cuando diga PK se refiere al Project Knowledge
Tu misión es diseñar un API .NET 9 para un Sistema de Control de Proyectos para ingeniería y construcción, alineado al PMBOK®/PMI, y entregar todo el esqueleto técnico paso a paso.  El API está parcialmente creado y todos los DTO están creados según la definición de API Definition del PK.

El proyecto debe mantenerse lo más simple posible siendo funcional.

El diseño del sitio debe ser muy atractivo y con los patrones de diseño de la carpeta YNEX

Arquitectura Propuesta

1. Módulo de Autenticación con Entra ID (Azure AD)
csharp
// Program.cs en Blazor WASM
builder.Services.AddMsalAuthentication(options =>
{
    builder.Configuration.Bind("AzureAd", options.ProviderOptions.Authentication);
    options.ProviderOptions.DefaultAccessTokenScopes.Add("api://your-api-id/access_as_user");
    options.ProviderOptions.LoginMode = "redirect";
});

// En el API
builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)
    .AddMicrosoftIdentityWebApi(builder.Configuration.GetSection("AzureAd"));

2. Módulo de Configuración
Este módulo debe incluir:
Gestión de empresas/organizaciones
Configuración de tipos de proyecto
Estructura de desglose de trabajo (WBS/EDT)
Configuración de roles y permisos
Parámetros del sistema

3. Módulos Core del Sistema
Basado en las mejores prácticas de PMI y AACE, con estos módulos adicionales:

Gestión de Proyectos
Creación y configuración de proyectos
Definición de fases según el ciclo de vida del proyecto
Gestión de stakeholders
Charter del proyecto

Gestión de Alcance
WBS (Work Breakdown Structure)
Diccionario de la WBS
Gestión de entregables
Control de cambios del alcance

Gestión de Cronograma
Definición de actividades
Secuenciación y dependencias
Estimación de duraciones
Ruta crítica (CPM)
Cronograma maestro
Curvas S de avance

Gestión de Costos (siguiendo AACE)
Estructura de costos (CBS - Cost Breakdown Structure)
Estimación de costos por clase (Clase 5 a Clase 1)
Presupuesto base
Control de costos y earned value (EVM)
Análisis de variaciones
Forecasting

Gestión de Contratos
Registro de contratos
Gestión de contratistas
Órdenes de cambio
Valuaciones y certificaciones
Retenciones y garantías

Gestión de Riesgos
Registro de riesgos
Análisis cualitativo y cuantitativo
Planes de respuesta
Monitoreo de riesgos
Gestión de Calidad
Plan de calidad
Listas de verificación
No conformidades
Auditorías de calidad

Gestión Documental
Repositorio de documentos
Control de versiones
Distribución de documentos
Transmittals

Reportes y Dashboards
Dashboard ejecutivo
Reportes de avance
KPIs del proyecto
Reportes personalizados

Consideraciones Técnicas
Patrón Repository y Unit of Work para la capa de datos
Azure Blob Storage para documentos
Application Insights para monitoreo
FluentValidation para validaciones complejas
Blazor webassembly standalone
Minimal API con Carter.
EntityFrameworkCore 9 y Azure SQL
Cuando me refiera a PK, se trata del Project Knowledge de este proyecto de Claude.

La solución se llama EzPro.SD. Los proyectos se llaman Domain, Application, Infrastructure, API, Core, Web.  

Antes de avanzar generando información, pídeme autorización del plan. Si hay dudas, pregúntame. Siempre revisa el PK.

Los módulos del proyecto deben respetar los conceptos del documento ControlAccounts.md 