@page "/"
@using MudBlazor
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider
@inject ILoggingService Logger

<PageTitle>EzPro MSD - Sistema de Control de Proyectos</PageTitle>

@if (_isChecking)
{
    <div class="loading-container">
        <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
    </div>
}
else if (_isAuthenticated)
{
    // Si está autenticado, redirigir a home
    @code {
        protected override void OnAfterRender(bool firstRender)
        {
            if (firstRender && _isAuthenticated)
            {
                Navigation.NavigateTo("/home");
            }
        }
    }
}
else
{
    <div class="landing-container">
        <div class="landing-content">
            <MudContainer MaxWidth="MaxWidth.Large">
                <MudGrid>
                    <MudItem xs="12" md="6" Class="d-flex align-center">
                        <div>
                            <MudText Typo="Typo.h1" Class="landing-title mb-4">
                                Sistema de Control de Proyectos
                            </MudText>
                            <MudText Typo="Typo.h5" Class="landing-subtitle mb-6" Color="Color.Default">
                                Gestiona tus proyectos de ingeniería y construcción con la plataforma más completa del mercado
                            </MudText>
                            <div class="landing-features mb-6">
                                <div class="feature-item">
                                    <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Primary" Class="me-2" />
                                    <span>Control de costos y presupuestos</span>
                                </div>
                                <div class="feature-item">
                                    <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Primary" Class="me-2" />
                                    <span>Gestión de cronogramas y recursos</span>
                                </div>
                                <div class="feature-item">
                                    <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Primary" Class="me-2" />
                                    <span>Análisis de valor ganado (EVM)</span>
                                </div>
                                <div class="feature-item">
                                    <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Primary" Class="me-2" />
                                    <span>Reportes y dashboards en tiempo real</span>
                                </div>
                            </div>
                            <MudButton Variant="Variant.Filled" 
                                       Color="Color.Primary" 
                                       Size="Size.Large"
                                       StartIcon="@Icons.Custom.Brands.Microsoft"
                                       OnClick="Login"
                                       Class="px-8 py-3">
                                Iniciar Sesión con Microsoft
                            </MudButton>
                        </div>
                    </MudItem>
                    <MudItem xs="12" md="6" Class="d-flex align-center justify-center">
                        <div class="landing-illustration">
                            <MudIcon Icon="@Icons.Material.Filled.Engineering" 
                                     Style="font-size: 300px; color: var(--ynex-primary); opacity: 0.1;" />
                        </div>
                    </MudItem>
                </MudGrid>
            </MudContainer>
        </div>
        
        <div class="landing-footer">
            <MudContainer>
                <MudText Typo="Typo.body2" Align="Align.Center" Color="Color.Default">
                    © @DateTime.Now.Year EzPro MSD. Todos los derechos reservados.
                </MudText>
            </MudContainer>
        </div>
    </div>
}

<style>
    .loading-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }
    
    .landing-container {
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    }
    
    .landing-content {
        flex: 1;
        display: flex;
        align-items: center;
        padding: 2rem 0;
    }
    
    .landing-title {
        font-weight: 800;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
    
    .landing-subtitle {
        color: var(--ynex-gray-700);
        line-height: 1.6;
    }
    
    .landing-features {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    
    .feature-item {
        display: flex;
        align-items: center;
        font-size: 1.1rem;
        color: var(--ynex-gray-700);
    }
    
    .landing-illustration {
        position: relative;
        animation: float 6s ease-in-out infinite;
    }
    
    @@keyframes float {
        0% { transform: translateY(0px); }
        50% { transform: translateY(-20px); }
        100% { transform: translateY(0px); }
    }
    
    .landing-footer {
        padding: 2rem 0;
        background-color: rgba(255, 255, 255, 0.8);
        backdrop-filter: blur(10px);
    }
    
    @@media (max-width: 960px) {
        .landing-title {
            font-size: 2.5rem;
        }
        
        .landing-illustration {
            display: none;
        }
    }
</style>

@code {
    private bool _isAuthenticated = false;
    private bool _isChecking = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Logger.LogInfo("Verificando estado de autenticación en landing page...");
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            _isAuthenticated = authState.User?.Identity?.IsAuthenticated == true;
            
            if (_isAuthenticated)
            {
                Logger.LogInfo("Usuario autenticado detectado - redirigiendo a home");
                Navigation.NavigateTo("/home");
            }
            else
            {
                Logger.LogInfo("Usuario no autenticado - mostrando landing page");
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error al verificar autenticación en landing page");
        }
        finally
        {
            _isChecking = false;
        }
    }

    private void Login()
    {
        Logger.LogInfo("Usuario inició proceso de login desde landing page");
        Navigation.NavigateTo("authentication/login");
    }
}