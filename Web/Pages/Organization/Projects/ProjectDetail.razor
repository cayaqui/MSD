@page "/projects/{Id:guid}"
@using Core.DTOs.Organization.Project
@using Web.Services.Interfaces
@using MudBlazor
@inject IProjectApiService ProjectService
@inject NavigationManager Navigation
@inject ISnackbar Snackbar
@inject ILoggingService Logger
@attribute [Authorize]

<PageTitle>@(_project?.Name ?? "Proyecto") | EzPro MSD</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    @if (_loading)
    {
        <MudGrid>
            <MudItem xs="12">
                <MudCard>
                    <MudCardContent>
                        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="40px" Width="50%" Class="mb-4" />
                        <MudSkeleton SkeletonType="SkeletonType.Text" />
                        <MudSkeleton SkeletonType="SkeletonType.Text" />
                        <MudSkeleton SkeletonType="SkeletonType.Text" Width="80%" />
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>
    }
    else if (_project != null)
    {
        <!-- Header -->
        <MudGrid AlignItems="AlignItems.Center" Class="mb-4">
            <MudItem xs="12" sm="8">
                <MudBreadcrumbs Items="_breadcrumbs" />
                <div class="d-flex align-center gap-2 mt-2">
                    <MudText Typo="Typo.h4">@_project.Name</MudText>
                    <MudChip T="string" Color="@GetStatusColor()" Text="@_project.Status" />
                </div>
            </MudItem>
            <MudItem xs="12" sm="4" Class="text-right">
                <MudButton Variant="Variant.Outlined" 
                           StartIcon="@Icons.Material.Filled.Edit"
                           OnClick="@(() => Navigation.NavigateTo($"/projects/{Id}/edit"))"
                           Class="mr-2">
                    Editar
                </MudButton>
                <MudButton Variant="Variant.Filled" 
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.Dashboard"
                           OnClick="@(() => Navigation.NavigateTo($"/projects/{Id}/dashboard"))">
                    Dashboard
                </MudButton>
            </MudItem>
        </MudGrid>

        <!-- Project Info Cards -->
        <MudGrid>
            <!-- Basic Information -->
            <MudItem xs="12" md="6">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Información General</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Código</MudText>
                                <MudText Typo="Typo.body1">@_project.Code</MudText>
                            </MudItem>
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Código WBS</MudText>
                                <MudText Typo="Typo.body1">@_project.WBSCode</MudText>
                            </MudItem>
                            <MudItem xs="12">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Descripción</MudText>
                                <MudText Typo="Typo.body1">@(_project.Description ?? "Sin descripción")</MudText>
                            </MudItem>
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Operación</MudText>
                                <MudText Typo="Typo.body1">@_project.OperationName</MudText>
                            </MudItem>
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Estado</MudText>
                                <MudChip T="string" Size="Size.Small" Color="@GetStatusColor()" Text="@_project.Status" />
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <!-- Financial Information -->
            <MudItem xs="12" md="6">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Información Financiera</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Presupuesto Total</MudText>
                                <MudText Typo="Typo.h6">@_project.Currency @_project.TotalBudget.ToString("N2")</MudText>
                            </MudItem>
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Costo Actual</MudText>
                                <MudText Typo="Typo.h6">@_project.Currency @(_project.ActualCost?.ToString("N2") ?? "0.00")</MudText>
                            </MudItem>
                            <MudItem xs="12">
                                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-1">Progreso Financiero</MudText>
                                <MudProgressLinear Color="Color.Primary" 
                                                   Value="@GetFinancialProgress()" 
                                                   Class="my-2" />
                                <MudText Typo="Typo.body2">@GetFinancialProgress().ToString("F1")% del presupuesto utilizado</MudText>
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <!-- Schedule Information -->
            <MudItem xs="12" md="6">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Cronograma</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Fecha de Inicio Planificada</MudText>
                                <MudText Typo="Typo.body1">@_project.PlannedStartDate.ToString("dd/MM/yyyy")</MudText>
                            </MudItem>
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Fecha de Fin Planificada</MudText>
                                <MudText Typo="Typo.body1">@_project.PlannedEndDate.ToString("dd/MM/yyyy")</MudText>
                            </MudItem>
                            @if (_project.ActualStartDate.HasValue)
                            {
                                <MudItem xs="12" sm="6">
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Fecha de Inicio Real</MudText>
                                    <MudText Typo="Typo.body1">@_project.ActualStartDate.Value.ToString("dd/MM/yyyy")</MudText>
                                </MudItem>
                            }
                            @if (_project.ActualEndDate.HasValue)
                            {
                                <MudItem xs="12" sm="6">
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Fecha de Fin Real</MudText>
                                    <MudText Typo="Typo.body1">@_project.ActualEndDate.Value.ToString("dd/MM/yyyy")</MudText>
                                </MudItem>
                            }
                            <MudItem xs="12">
                                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-1">Progreso</MudText>
                                <MudProgressLinear Color="@GetProgressColor()" 
                                                   Value="@((double)_project.ProgressPercentage)" 
                                                   Class="my-2" />
                                <MudText Typo="Typo.body2">@_project.ProgressPercentage.ToString("F1")% completado</MudText>
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <!-- Additional Information -->
            <MudItem xs="12" md="6">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Información Adicional</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudGrid>
                            @if (!string.IsNullOrEmpty(_project.Location))
                            {
                                <MudItem xs="12">
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Ubicación</MudText>
                                    <MudText Typo="Typo.body1">@_project.Location</MudText>
                                </MudItem>
                            }
                            @if (!string.IsNullOrEmpty(_project.Client))
                            {
                                <MudItem xs="12">
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Cliente</MudText>
                                    <MudText Typo="Typo.body1">@_project.Client</MudText>
                                </MudItem>
                            }
                            @if (!string.IsNullOrEmpty(_project.ContractNumber))
                            {
                                <MudItem xs="12">
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Número de Contrato</MudText>
                                    <MudText Typo="Typo.body1">@_project.ContractNumber</MudText>
                                </MudItem>
                            }
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Miembros del Equipo</MudText>
                                <MudText Typo="Typo.body1">@_project.TeamMemberCount</MudText>
                            </MudItem>
                            <MudItem xs="12" sm="6">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Fases</MudText>
                                <MudText Typo="Typo.body1">@_project.PhaseCount</MudText>
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <!-- Audit Information -->
            <MudItem xs="12">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Información de Auditoría</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="12" sm="6" md="3">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Creado Por</MudText>
                                <MudText Typo="Typo.body1">@(_project.CreatedBy ?? "Sistema")</MudText>
                            </MudItem>
                            <MudItem xs="12" sm="6" md="3">
                                <MudText Typo="Typo.body2" Color="Color.Secondary">Fecha de Creación</MudText>
                                <MudText Typo="Typo.body1">@_project.CreatedAt.ToString("dd/MM/yyyy HH:mm")</MudText>
                            </MudItem>
                            @if (_project.UpdatedBy != null)
                            {
                                <MudItem xs="12" sm="6" md="3">
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Última Modificación Por</MudText>
                                    <MudText Typo="Typo.body1">@_project.UpdatedBy</MudText>
                                </MudItem>
                                <MudItem xs="12" sm="6" md="3">
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Fecha de Última Modificación</MudText>
                                    <MudText Typo="Typo.body1">@_project.UpdatedAt?.ToString("dd/MM/yyyy HH:mm")</MudText>
                                </MudItem>
                            }
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>
    }
    else if (!_loading)
    {
        <MudPaper Class="pa-8">
            <MudStack AlignItems="AlignItems.Center" Spacing="3">
                <MudIcon Icon="@Icons.Material.Filled.Error" Size="Size.Large" Color="Color.Error" />
                <MudText Typo="Typo.h6" Color="Color.Error">Proyecto no encontrado</MudText>
                <MudButton Variant="Variant.Filled" 
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.ArrowBack"
                           OnClick="@(() => Navigation.NavigateTo("/projects"))">
                    Volver a Proyectos
                </MudButton>
            </MudStack>
        </MudPaper>
    }
</MudContainer>

@code {
    [Parameter] public Guid Id { get; set; }
    
    private ProjectDto? _project;
    private bool _loading = true;
    private List<BreadcrumbItem> _breadcrumbs = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadProject();
    }

    private async Task LoadProject()
    {
        try
        {
            _loading = true;
            _project = await ProjectService.GetProjectByIdAsync(Id);
            
            if (_project != null)
            {
                _breadcrumbs = new List<BreadcrumbItem>
                {
                    new BreadcrumbItem("Inicio", href: "/", icon: Icons.Material.Filled.Home),
                    new BreadcrumbItem("Proyectos", href: "/projects"),
                    new BreadcrumbItem(_project.Name, href: null, disabled: true)
                };
                
                Logger.LogDebug($"Loaded project: {_project.Name}");
            }
            else
            {
                Snackbar.Add("Proyecto no encontrado", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, $"Error loading project {Id}");
            Snackbar.Add("Error al cargar el proyecto", Severity.Error);
        }
        finally
        {
            _loading = false;
        }
    }

    private Color GetStatusColor()
    {
        return _project?.Status switch
        {
            "Active" => Color.Success,
            "Planning" => Color.Info,
            "OnHold" => Color.Warning,
            "Completed" => Color.Primary,
            "Cancelled" => Color.Error,
            _ => Color.Default
        };
    }

    private Color GetProgressColor()
    {
        if (_project == null)
            return Color.Default;
            
        if (_project.ProgressPercentage < 25)
            return Color.Error;
        else if (_project.ProgressPercentage < 50)
            return Color.Warning;
        else if (_project.ProgressPercentage < 75)
            return Color.Info;
        else
            return Color.Success;
    }

    private double GetFinancialProgress()
    {
        if (_project == null || _project.TotalBudget == 0)
            return 0;
            
        return (double)((_project.ActualCost ?? 0) / _project.TotalBudget * 100);
    }
}