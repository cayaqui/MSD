@implements IDisposable

@* Este componente no renderiza nada por sí mismo, solo registra su contenido con el TabControl padre *@

@code {
    [CascadingParameter] private EzTabControl? ParentTabControl { get; set; }

    [Parameter] public string TabId { get; set; } = Guid.NewGuid().ToString();
    [Parameter] public string Title { get; set; } = "Tab";
    [Parameter] public string? Icon { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public RenderFragment? Content { get; set; }
    [Parameter] public bool IsActive { get; set; } = false;
    [Parameter] public bool IsDisabled { get; set; } = false;
    [Parameter] public bool IsVisible { get; set; } = true;
    [Parameter] public string? BadgeText { get; set; }
    [Parameter] public int BadgeCount { get; set; }
    [Parameter] public string? BadgeVariant { get; set; } = "secondary";

    protected override void OnInitialized()
    {
        if (ParentTabControl != null)
        {
            ParentTabControl.RegisterTab(this);
        }
        else
        {
            throw new InvalidOperationException("EzTab debe usarse dentro de un EzTabControl");
        }
    }

    public void Dispose()
    {
        ParentTabControl?.UnregisterTab(this);
    }
}