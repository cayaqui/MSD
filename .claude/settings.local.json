{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(dotnet build)",
      "Bash(dotnet build:*)",
      "Bash(dotnet ef migrations add:*)",
      "Bash(for:*)",
      "Bash(do echo \"Processing: $file\")",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(do sed -i 's/using Domain\\.Entities\\.Projects;/using Domain.Projects.Core;/g' \"$file\")",
      "Bash(python:*)",
      "Bash(# Extract entity names from Domain/Entities (excluding Extensions and Comparison files)\necho \"\"=== ENTITY FILES ===\"\"\nfind Domain/Entities -name \"\"*.cs\"\" -type f | grep -v -E \"\"(Extensions|Comparison)\"\" | sed ''s|Domain/Entities/||'' | sed ''s|\\.cs$||'' | sort\n\necho -e \"\"\\n=== CONFIGURATION FILES ===\"\"\n# Extract configuration names from Infrastructure/Data/Configurations\nfind Infrastructure/Data/Configurations -name \"\"*.cs\"\" -type f | sed ''s|Infrastructure/Data/Configurations/||'' | sed ''s|Configuration\\.cs$||'' | sort\n\necho -e \"\"\\n=== COMPARING ===\"\"\n# Create temporary files for comparison\nfind Domain/Entities -name \"\"*.cs\"\" -type f | grep -v -E \"\"(Extensions|Comparison)\"\" | sed ''s|Domain/Entities/||'' | sed ''s|\\.cs$||'' | sed ''s|.*/||'' | sort > /tmp/entities.txt\nfind Infrastructure/Data/Configurations -name \"\"*.cs\"\" -type f | sed ''s|Infrastructure/Data/Configurations/||'' | sed ''s|Configuration\\.cs$||'' | sed ''s|.*/||'' | sort > /tmp/configurations.txt\n\necho \"\"Entities missing configurations:\"\"\ncomm -23 /tmp/entities.txt /tmp/configurations.txt\n\n# Clean up\nrm -f /tmp/entities.txt /tmp/configurations.txt)",
      "Bash(# Compare the other way - configurations that don''t have entities\nfind Infrastructure/Data/Configurations -name \"\"*.cs\"\" -type f | sed ''s|Infrastructure/Data/Configurations/||'' | sed ''s|Configuration\\.cs$||'' | sed ''s|.*/||'' | sort > /tmp/configurations.txt\nfind Domain/Entities -name \"\"*.cs\"\" -type f | grep -v -E \"\"(Extensions|Comparison)\"\" | sed ''s|Domain/Entities/||'' | sed ''s|\\.cs$||'' | sed ''s|.*/||'' | sort > /tmp/entities.txt\n\necho \"\"Configurations without corresponding entities:\"\"\ncomm -23 /tmp/configurations.txt /tmp/entities.txt\n\n# Clean up\nrm -f /tmp/entities.txt /tmp/configurations.txt)",
      "Bash(grep:*)",
      "Bash(dotnet ef migrations remove:*)",
      "Bash(rg:*)",
      "Bash(dotnet ef migrations:*)",
      "Bash(taskkill:*)",
      "Bash(powershell:*)",
      "Bash(dotnet run:*)",
      "Bash(dotnet msbuild:*)",
      "Bash(dotnet clean:*)",
      "Bash(dir:*)",
      "Bash(touch:*)",
      "Bash(do sed -i 's/GetFirstOrDefaultAsync/GetAsync/g' \"$file\")",
      "Bash(sed:*)",
      "Bash(del PagesDashboardIndex.razor)",
      "Bash(dotnet add package:*)",
      "Bash(del \"C:\\Users\\AlejandroMu単oz\\source\\repos\\MSD\\Web\\App.razor.cs\")",
      "Bash(del \"C:\\Users\\AlejandroMu単oz\\source\\repos\\MSD\\Web\\Services\\Implementation\\BreadcrumbService.cs\")",
      "Bash(do sed -i 's/var userId = await currentUserService\\.GetUserIdAsync();/var userId = currentUserService.UserId ?? throw new UnauthorizedAccessException(\"\"User ID not found\"\");/g' \"$file\")",
      "Bash(del \"C:\\Users\\AlejandroMu単oz\\source\\repos\\MSD\\Web\\Components\\RedirectToLogin.razor\")",
      "Bash(del \"C:\\Users\\AlejandroMu単oz\\source\\repos\\MSD\\Web\\Components\\Common\\ConfirmDialog.razor\")"
    ],
    "deny": []
  }
}